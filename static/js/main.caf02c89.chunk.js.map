{"version":3,"sources":["logo.svg","component/home.js","component/Main.js","component/Page2.js","component/Card/index.js","component/Start.js","Pages/Resume/Components/Aboutme.js","Pages/Resume/Components/Education.js","Pages/Resume/Components/Employment.js","Pages/Resume/Components/Experience.js","Pages/Resume/Components/Projects.js","Pages/Resume/Components/Home.js","Pages/Resume/Components/TechSkills.js","Pages/Resume/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Component","Main","props","state","columnDefs","headerName","field","rowData","make","model","price","Box","direction","border","color","size","pad","Text","Home","Card","console","log","this","background","width","flex","alignSelf","gap","title","description","Start","hamdleResumeonClick","elevation","onClick","AboutMe","handledrop","visible","setState","handleLinkedInClick","window","open","handleStackClick","handleGitClick","handleTwitterClick","handleMediumClick","align","left","Image","src","process","fit","height","style","cursor","justify","LinkedinOption","StackOverflow","Twitter","Github","Medium","Heading","textAlign","level","Education","Employment","Experience","Project","TechSkills","top","bottom","right","margin","value","text","Resume","App","useHistory","className","path","Clock","type","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uJAAAA,EAAOC,QAAU,IAA0B,kC,kMCQjBC,Y,iBCuDXC,E,YAlDb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,WAAY,CACV,CACEC,WAAY,OACZC,MAAO,QAET,CACED,WAAY,QACZC,MAAO,SAET,CACED,WAAY,QACZC,MAAO,UAGXC,QAAS,CACP,CACEC,KAAM,SACNC,MAAO,SACPC,MAAO,MAET,CACEF,KAAM,OACNC,MAAO,SACPC,MAAO,MAET,CACEF,KAAM,UACNC,MAAO,SACPC,MAAO,QA/BI,E,sEAsCjB,OACE,kBAACC,EAAA,EAAD,CACEC,UAAU,MACVC,OAAQ,CAAEC,MAAO,QAASC,KAAM,SAChCC,IAAI,UAEL,kBAACC,EAAA,EAAD,KAAO,mB,GA7CKjB,aCgDJkB,E,YAlDb,WAAYhB,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,WAAY,CACV,CACEC,WAAY,OACZC,MAAO,QAET,CACED,WAAY,QACZC,MAAO,SAET,CACED,WAAY,QACZC,MAAO,UAGXC,QAAS,CACP,CACEC,KAAM,SACNC,MAAO,SACPC,MAAO,MAET,CACEF,KAAM,OACNC,MAAO,SACPC,MAAO,MAET,CACEF,KAAM,UACNC,MAAO,SACPC,MAAO,QA/BI,E,sEAsCjB,OACE,kBAACC,EAAA,EAAD,CACEC,UAAU,MACVC,OAAQ,CAAEC,MAAO,QAASC,KAAM,SAChCC,IAAI,UAEJ,kBAACC,EAAA,EAAD,KAAO,kB,GA7CIjB,aC+BJmB,E,YAlCb,WAAYjB,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,GAFI,E,sEAQjB,OADAiB,QAAQC,IAAI,mBAAoBC,KAAKpB,OAEnC,kBAACS,EAAA,EAAD,CACEY,WAAW,QACXP,IAAI,SACJQ,MAAM,OACNX,OAAQ,CAAEC,MAAO,QAASC,KAAM,UAChCU,KAAK,OACLC,UAAU,SACVC,IAAI,UAEJ,kBAAChB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,CAAKY,WAAW,WACd,kBAACN,EAAA,EAAD,CAAMF,KAAO,SAASD,MAAQ,SAA9B,IAAwCQ,KAAKpB,MAAM0B,QAErD,kBAACjB,EAAA,EAAD,KACE,kBAACM,EAAA,EAAD,SAAQ,iBAEV,kBAACN,EAAA,EAAD,CAAKY,WAAW,WACd,kBAACN,EAAA,EAAD,CAAMF,KAAO,SAAb,IAAuBO,KAAKpB,MAAM2B,oB,GA3B3B7B,aCkFJ8B,E,YAlEb,WAAY5B,GAAQ,IAAD,8BACjB,4CAAMA,KAIR6B,oBAAsB,WAEpBX,QAAQC,IAAI,6CALZ,EAAKlB,MAAQ,GAFI,E,sEAUT,IAAD,OAEP,OADEiB,QAAQC,IAAI,gBAAiBC,KAAKpB,OAElC,kBAACS,EAAA,EAAD,CACEY,WAAW,QACXP,IAAI,SACJQ,MAAM,OAENC,KAAK,OACLC,UAAU,SACVC,IAAI,UAEJ,kBAAChB,EAAA,EAAD,KACE,kBAACM,EAAA,EAAD,CAAMF,KAAK,SAASD,MAAM,SACvB,+CAGH,kBAACG,EAAA,EAAD,CAAMF,KAAK,SAASD,MAAM,SACvB,qDAGL,kBAACH,EAAA,EAAD,CAAKC,UAAU,MAAMe,IAAI,SACvB,kBAAChB,EAAA,EAAD,CACEa,MAAM,MACNQ,UAAU,SACVC,QAAS,WACP,EAAKF,wBAGP,kBAAC,EAAD,CAAMH,MAAM,SAASC,YAAY,eAGnC,kBAAClB,EAAA,EAAD,CAAKa,MAAM,MAAMQ,UAAU,UACzB,kBAAC,EAAD,CACEJ,MAAM,gBACNC,YAAY,gEAGhB,kBAAClB,EAAA,EAAD,CAAKa,MAAM,MAAMQ,UAAU,UACzB,kBAAC,EAAD,CACEJ,MAAM,aACNC,YAAY,+CAGhB,kBAAClB,EAAA,EAAD,CAAKa,MAAM,MAAMQ,UAAU,UACzB,kBAAC,EAAD,CACEJ,MAAM,UACNC,YAAY,8D,GA1DN7B,a,+DC4ILkC,E,YAtIb,WAAYhC,GAAQ,IAAD,8BACjB,4CAAMA,KAMR6B,oBAAsB,WAEpBX,QAAQC,IAAI,6CATK,EAYnBc,WAAa,WACX,EAAKhC,MAAMiC,QACP,EAAKC,SAAS,CAAED,SAAS,IACzB,EAAKC,SAAS,CAAED,SAAS,KAfZ,EAkBnBE,oBAAsB,WACpBC,OAAOC,KAAK,4CAA6C,UAnBxC,EAsBnBC,iBAAmB,WACjBF,OAAOC,KACL,uDACA,UAzBe,EA6BnBE,eAAiB,WACfH,OAAOC,KAAK,kCAAmC,UA9B9B,EAiCnBG,mBAAqB,WACnBJ,OAAOC,KAAK,mCAAoC,UAlC/B,EAqCnBI,kBAAoB,WACfL,OAAOC,KAAK,oCAAqC,UApCpD,EAAKrC,MAAQ,CACXiC,SAAS,GAHM,E,sEAwCT,IAAD,OACP,OACE,kBAACzB,EAAA,EAAD,CACEY,WAAW,QAEXC,MAAM,OAENC,KAAK,OACLC,UAAU,SAEVM,UAAU,UAEV,kBAACrB,EAAA,EAAD,CAAKY,WAAW,SAASX,UAAU,OACjC,kBAACD,EAAA,EAAD,CAAKa,MAAM,MAAMqB,MAAM,QAAQ7B,IAAK,CAAE8B,KAAM,UAC1C,kBAAC7B,EAAA,EAAD,CAAMH,MAAM,QAAQC,KAAK,UACtB,aAGL,kBAACJ,EAAA,EAAD,CACEa,MAAM,MACNqB,MAAM,MACNZ,QAAS,WACP,EAAKE,eAGP,kBAACY,EAAA,EAAD,CAEEC,IAAKC,uCACLC,IAAI,UACJC,OAAO,OACPC,MAAO,CAAEC,OAAQ,eAKrB,kBAAC1C,EAAA,EAAD,CAAKY,WAAW,SACd,kBAACZ,EAAA,EAAD,CACEa,MAAM,OACNZ,UAAU,MACVe,IAAI,SACJX,IAAI,SACJsC,QAAQ,OAER,kBAACC,EAAA,EAAD,CACEzC,MAAM,QACNmB,QAAS,WACP,EAAKK,yBAGT,kBAACkB,EAAA,EAAD,CACEvB,QAAS,WACP,EAAKQ,sBAGT,kBAACgB,EAAA,EAAD,CACExB,QAAS,WACP,EAAKU,wBAGT,kBAACe,EAAA,EAAD,CACEzB,QAAS,WACP,EAAKS,oBAGT,kBAACiB,EAAA,EAAD,CACE1B,QAAS,WACP,EAAKW,wBAIX,kBAACgB,EAAA,EAAD,KAAU,YACV,kBAACjD,EAAA,EAAD,CAAKK,IAAK,CAAE8B,KAAM,WAChB,kBAACc,EAAA,EAAD,CAASC,UAAU,QAAQC,MAAO,GAC/B,cAGL,kBAACnD,EAAA,EAAD,CACEa,MAAM,OACNE,UAAU,SAGV,kBAACT,EAAA,EAAD,CAAMF,KAAK,UAEP,iP,GA5HIf,aC0DP+D,E,YA/Db,WAAY7D,GAAQ,IAAD,8BACjB,4CAAMA,KAMR6B,oBAAsB,WAEpBX,QAAQC,IAAI,6CATK,EAYnBc,WAAa,WACX,EAAKhC,MAAMiC,QACP,EAAKC,SAAS,CAAED,SAAS,IACzB,EAAKC,SAAS,CAAED,SAAS,KAb7B,EAAKjC,MAAQ,CACXiC,SAAS,GAHM,E,sEAkBT,IAAD,OAEP,OADAhB,QAAQC,IAAI,gBAAiBC,KAAKpB,OAEhC,kBAACS,EAAA,EAAD,CACEY,WAAW,QAEXC,MAAM,OAENC,KAAK,OACLC,UAAU,SAEVM,UAAU,UAEV,kBAACrB,EAAA,EAAD,CAAKY,WAAW,SAASX,UAAU,OACjC,kBAACD,EAAA,EAAD,CAAKa,MAAM,MAAMqB,MAAM,QAAQ7B,IAAK,CAAE8B,KAAM,UAC1C,kBAAC7B,EAAA,EAAD,CAAMH,MAAM,QAAQC,KAAK,UACtB,cAGL,kBAACJ,EAAA,EAAD,CACEa,MAAM,MACNqB,MAAM,MACNZ,QAAS,WACP,EAAKE,eAGP,kBAACY,EAAA,EAAD,CAEEC,IAAKC,uCACLC,IAAI,UACJC,OAAO,OACPC,MAAO,CAAEC,OAAQ,eAItB/B,KAAKnB,MAAMiC,SACV,kBAACzB,EAAA,EAAD,KACE,kBAACM,EAAA,EAAD,KAAO,0B,GAxDKjB,aCgETgE,E,YA/Db,WAAY9D,GAAQ,IAAD,8BACjB,4CAAMA,KAMR6B,oBAAsB,WAEpBX,QAAQC,IAAI,6CATK,EAYnBc,WAAa,WACX,EAAKhC,MAAMiC,QACP,EAAKC,SAAS,CAAED,SAAS,IACzB,EAAKC,SAAS,CAAED,SAAS,KAb7B,EAAKjC,MAAQ,CACXiC,SAAS,GAHM,E,sEAkBT,IAAD,OAEP,OADAhB,QAAQC,IAAI,gBAAiBC,KAAKpB,OAEhC,kBAACS,EAAA,EAAD,CACEY,WAAW,QAEXC,MAAM,OAENC,KAAK,OACLC,UAAU,SAEVM,UAAU,UAEV,kBAACrB,EAAA,EAAD,CAAKY,WAAW,SAASX,UAAU,OACjC,kBAACD,EAAA,EAAD,CAAKa,MAAM,MAAMqB,MAAM,QAAQ7B,IAAK,CAAE8B,KAAM,UAC1C,kBAAC7B,EAAA,EAAD,CAAMH,MAAM,QAAQC,KAAK,UACtB,eAGL,kBAACJ,EAAA,EAAD,CACEa,MAAM,MACNqB,MAAM,MACNZ,QAAS,WACP,EAAKE,eAGP,kBAACY,EAAA,EAAD,CAEEC,IAAKC,uCACLC,IAAI,UACJC,OAAO,OACPC,MAAO,CAAEC,OAAQ,eAItB/B,KAAKnB,MAAMiC,SACV,kBAACzB,EAAA,EAAD,KACE,kBAACM,EAAA,EAAD,KAAO,0B,GAxDMjB,aCgEViE,E,YA/Db,WAAY/D,GAAQ,IAAD,8BACjB,4CAAMA,KAMR6B,oBAAsB,WAEpBX,QAAQC,IAAI,6CATK,EAYnBc,WAAa,WACX,EAAKhC,MAAMiC,QACP,EAAKC,SAAS,CAAED,SAAS,IACzB,EAAKC,SAAS,CAAED,SAAS,KAb7B,EAAKjC,MAAQ,CACXiC,SAAS,GAHM,E,sEAkBT,IAAD,OAEP,OADAhB,QAAQC,IAAI,gBAAiBC,KAAKpB,OAEhC,kBAACS,EAAA,EAAD,CACEY,WAAW,QAEXC,MAAM,OAENC,KAAK,OACLC,UAAU,SAEVM,UAAU,UAEV,kBAACrB,EAAA,EAAD,CAAKY,WAAW,SAASX,UAAU,OACjC,kBAACD,EAAA,EAAD,CAAKa,MAAM,MAAMqB,MAAM,QAAQ7B,IAAK,CAAE8B,KAAM,UAC1C,kBAAC7B,EAAA,EAAD,CAAMH,MAAM,QAAQC,KAAK,UACtB,eAGL,kBAACJ,EAAA,EAAD,CACEa,MAAM,MACNqB,MAAM,MACNZ,QAAS,WACP,EAAKE,eAGP,kBAACY,EAAA,EAAD,CAEEC,IAAKC,uCACLC,IAAI,UACJC,OAAO,OACPC,MAAO,CAAEC,OAAQ,eAItB/B,KAAKnB,MAAMiC,SACV,kBAACzB,EAAA,EAAD,KACE,kBAACM,EAAA,EAAD,KAAO,0B,GAxDMjB,aCgEVkE,GChEIlE,Y,YDCjB,WAAYE,GAAQ,IAAD,8BACjB,4CAAMA,KAMR6B,oBAAsB,WAEpBX,QAAQC,IAAI,6CATK,EAYnBc,WAAa,WACX,EAAKhC,MAAMiC,QACP,EAAKC,SAAS,CAAED,SAAS,IACzB,EAAKC,SAAS,CAAED,SAAS,KAb7B,EAAKjC,MAAQ,CACXiC,SAAS,GAHM,E,sEAkBT,IAAD,OAEP,OADAhB,QAAQC,IAAI,gBAAiBC,KAAKpB,OAEhC,kBAACS,EAAA,EAAD,CACEY,WAAW,QAEXC,MAAM,OAENC,KAAK,OACLC,UAAU,SAEVM,UAAU,UAEV,kBAACrB,EAAA,EAAD,CAAKY,WAAW,SAASX,UAAU,OACjC,kBAACD,EAAA,EAAD,CAAKa,MAAM,MAAMqB,MAAM,QAAQ7B,IAAK,CAAE8B,KAAM,UAC1C,kBAAC7B,EAAA,EAAD,CAAMH,MAAM,QAAQC,KAAK,UACtB,aAGL,kBAACJ,EAAA,EAAD,CACEa,MAAM,MACNqB,MAAM,MACNZ,QAAS,WACP,EAAKE,eAGP,kBAACY,EAAA,EAAD,CAEEC,IAAKC,uCACLC,IAAI,UACJC,OAAO,OACPC,MAAO,CAAEC,OAAQ,eAItB/B,KAAKnB,MAAMiC,SACV,kBAACzB,EAAA,EAAD,KACE,kBAACM,EAAA,EAAD,KAAO,0B,GAxDGjB,c,QEsHPmE,G,mBAnIb,WAAYjE,GAAQ,IAAD,8BACjB,4CAAMA,KAMRiC,WAAa,WACX,EAAKhC,MAAMiC,QACP,EAAKC,SAAS,CAAED,SAAS,IACzB,EAAKC,SAAS,CAAED,SAAS,KAR7B,EAAKjC,MAAQ,CACXiC,SAAS,GAHM,E,sEAaT,IAAD,OACP,OACE,kBAACzB,EAAA,EAAD,CACEY,WAAW,QACXC,MAAM,OACNC,KAAK,OACLC,UAAU,SACVM,UAAU,UAEV,kBAACrB,EAAA,EAAD,CAAKY,WAAW,SAASX,UAAU,OACjC,kBAACD,EAAA,EAAD,CAAKa,MAAM,MAAMqB,MAAM,QAAQ7B,IAAI,SACjC,kBAACC,EAAA,EAAD,CAAMH,MAAM,QAAQC,KAAK,SACtB,qBAGL,kBAACJ,EAAA,EAAD,CACEa,MAAM,MACNqB,MAAM,MACN7B,IAAI,QACJiB,QAAS,WACP,EAAKE,eAGP,kBAACY,EAAA,EAAD,CACEC,IAAKC,uCACLC,IAAI,UACJC,OAAO,OACPC,MAAO,CAAEC,OAAQ,eAItB/B,KAAKnB,MAAMiC,SACV,kBAACzB,EAAA,EAAD,CACEK,IAAK,CACH8B,KAAM,SACNsB,IAAK,SACLC,OAAQ,SACRC,MAAO,UAET3C,IAAI,SACJ4C,OACE,GAOF1B,MAAM,SACNtB,WAAW,SAEX,kBAACZ,EAAA,EAAD,CAAKa,MAAM,OAAOZ,UAAU,MAAMe,IAAI,UACpC,kBAAChB,EAAA,EAAD,CAAKa,MAAM,MAAM+C,OAAQ,CAAEzB,KAAM,SAAUwB,MAAO,WAChD,kBAAC,IAAD,CAAqBE,MAAO,GAAIC,KAAI,UAAK,GAAL,OACpC,kBAACxD,EAAA,EAAD,CAAMH,MAAM,SAAS,MAEvB,kBAACH,EAAA,EAAD,CAAKa,MAAM,MAAM+C,OAAQ,CAAEzB,KAAM,SAAUwB,MAAO,WAChD,kBAAC,IAAD,CAAqBE,MAAO,GAAIC,KAAI,UAAK,GAAL,OACpC,kBAACxD,EAAA,EAAD,CAAMH,MAAM,SAAS,SAEvB,kBAACH,EAAA,EAAD,CAAKa,MAAM,MAAM+C,OAAQ,CAAEzB,KAAM,SAAUwB,MAAO,WAChD,kBAAC,IAAD,CAAqBE,MAAO,GAAIC,KAAI,UAAK,GAAL,OACpC,kBAACxD,EAAA,EAAD,CAAMH,MAAM,SAAS,SAEvB,kBAACH,EAAA,EAAD,CAAKa,MAAM,MAAM+C,OAAQ,CAAEzB,KAAM,SAAUwB,MAAO,WAChD,kBAAC,IAAD,CAAqBE,MAAO,GAAIC,KAAI,UAAK,GAAL,OACpC,kBAACxD,EAAA,EAAD,CAAMH,MAAM,SAAS,QAEvB,kBAACH,EAAA,EAAD,CAAKa,MAAM,MAAM+C,OAAQ,CAAEzB,KAAM,SAAUwB,MAAO,WAChD,kBAAC,IAAD,CAAqBE,MAAO,GAAIC,KAAI,UAAK,GAAL,OACpC,kBAACxD,EAAA,EAAD,CAAMH,MAAM,SAAS,iBAIzB,kBAACH,EAAA,EAAD,CAAKa,MAAM,OAAOZ,UAAU,MAAMe,IAAI,UACpC,kBAAChB,EAAA,EAAD,CAAKa,MAAM,MAAM+C,OAAQ,CAAEzB,KAAM,SAAUwB,MAAO,WAChD,kBAAC,IAAD,CAAqBE,MAAO,GAAIC,KAAI,UAAK,GAAL,OACpC,kBAACxD,EAAA,EAAD,CAAMH,MAAM,SAAS,aAEvB,kBAACH,EAAA,EAAD,CAAKa,MAAM,MAAM+C,OAAQ,CAAEzB,KAAM,SAAUwB,MAAO,WAChD,kBAAC,IAAD,CAAqBE,MAAO,GAAIC,KAAI,UAAK,GAAL,OACpC,kBAACxD,EAAA,EAAD,CAAMH,MAAM,SAAS,YAEvB,kBAACH,EAAA,EAAD,CAAKa,MAAM,MAAM+C,OAAQ,CAAEzB,KAAM,SAAUwB,MAAO,WAChD,kBAAC,IAAD,CAAqBE,MAAO,GAAIC,KAAI,UAAK,GAAL,OACpC,kBAACxD,EAAA,EAAD,CAAMH,MAAM,SAAS,QAEvB,kBAACH,EAAA,EAAD,CAAKa,MAAM,MAAM+C,OAAQ,CAAEzB,KAAM,SAAUwB,MAAO,WAChD,kBAAC,IAAD,CAAqBE,MAAO,GAAIC,KAAI,UAAK,GAAL,OACpC,kBAACxD,EAAA,EAAD,CAAMH,MAAM,SAAS,WAEvB,kBAACH,EAAA,EAAD,CAAKa,MAAM,MAAM+C,OAAQ,CAAEzB,KAAM,SAAUwB,MAAO,WAChD,kBAAC,IAAD,CAAqBE,MAAO,GAAIC,KAAI,UAAK,GAAL,OACpC,kBAACxD,EAAA,EAAD,CAAMH,MAAM,SAAS,kBAIzB,kBAACH,EAAA,EAAD,CAAKa,MAAM,OAAOZ,UAAU,MAAMe,IAAI,UACpC,kBAAChB,EAAA,EAAD,CAAKa,MAAM,MAAM+C,OAAQ,CAAEzB,KAAM,SAAUwB,MAAO,WAChD,kBAAC,IAAD,CAAqBE,MAAO,GAAIC,KAAI,UAAK,GAAL,OACpC,kBAACxD,EAAA,EAAD,CAAMH,MAAM,SAAS,qBAEvB,kBAACH,EAAA,EAAD,CAAKa,MAAM,MAAM+C,OAAQ,CAAEzB,KAAM,SAAUwB,MAAO,WAChD,kBAAC,IAAD,CAAqBE,MAAO,GAAIC,KAAI,UAAK,GAAL,OACpC,kBAACxD,EAAA,EAAD,CAAMH,MAAM,SAAS,aAEvB,kBAACH,EAAA,EAAD,CAAKa,MAAM,MAAM+C,OAAQ,CAAEzB,KAAM,SAAUwB,MAAO,WAChD,kBAAC,IAAD,CAAqBE,MAAO,GAAIC,KAAI,UAAK,GAAL,OACpC,kBAACxD,EAAA,EAAD,CAAMH,MAAM,SAAS,e,GA1HZd,cCkDV0E,E,YA3Bb,WAAYxE,GAAQ,IAAD,8BACjB,4CAAMA,KAIR6B,oBAAsB,WAEpBX,QAAQC,IAAI,6CALZ,EAAKlB,MAAQ,GAFI,E,sEAWjB,OACE,kBAACQ,EAAA,EAAD,CAAKa,MAAM,OAAOC,KAAK,QACrB,kBAACd,EAAA,EAAD,CAAKa,MAAM,QACT,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OACC,EACD,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GArBWxB,a,yBC2BN2E,MAnCf,WAEE,OADgBC,cAEd,kBAAC,IAAD,KACE,yBAAKC,UAAU,MAAMrD,MAAM,OAAOC,KAAK,QACrC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqD,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,SACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,QAIJ,kBAACnE,EAAA,EAAD,CAAKC,UAAU,OACb,kBAACD,EAAA,EAAD,CAAKa,MAAM,MAAMqB,MAAM,OACrB,kBAAC5B,EAAA,EAAD,CAAMF,KAAK,SACR,kDAGL,kBAACJ,EAAA,EAAD,CAAKa,MAAM,MAAMqB,MAAM,OACrB,kBAACkC,EAAA,EAAD,CAAOC,KAAK,iBClCJC,QACW,cAA7B1C,OAAO2C,SAASC,UAEe,UAA7B5C,OAAO2C,SAASC,UAEhB5C,OAAO2C,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.caf02c89.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, { Component } from 'react';\r\nimport { AgGridReact } from '@ag-grid-community/react';\r\nimport { AllCommunityModules } from '@ag-grid-community/all-modules';\r\n\r\nimport '@ag-grid-community/all-modules/dist/styles/ag-grid.css';\r\nimport '@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css';\r\n\r\n\r\nclass MyComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columnDefs: [{\r\n        headerName: \"Make\", field: \"make\"\r\n      }, {\r\n        headerName: \"Model\", field: \"model\"\r\n      }, {\r\n        headerName: \"Price\", field: \"price\"\r\n      }],\r\n      rowData: [{\r\n        make: \"Toyota\", model: \"Celica\", price: 35000\r\n      }, {\r\n        make: \"Ford\", model: \"Mondeo\", price: 32000\r\n      }, {\r\n        make: \"Porsche\", model: \"Boxter\", price: 72000\r\n      }]\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"ag-theme-balham\"\r\n          style={{\r\n            height: '500px',\r\n            width: '600px'\r\n          }}\r\n        >\r\n          <AgGridReact\r\n            columnDefs={this.state.columnDefs}\r\n            rowData={this.state.rowData}\r\n            modules={AllCommunityModules}>\r\n          </AgGridReact>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyComponent;","import React, { Component } from \"react\";\r\nimport { Card, Col, Row } from \"antd\";\r\nimport {Box, Text} from \"grommet\"\r\nimport { AgGridReact } from \"@ag-grid-community/react\";\r\nimport { AllCommunityModules } from \"@ag-grid-community/all-modules\";\r\n\r\nimport \"@ag-grid-community/all-modules/dist/styles/ag-grid.css\";\r\nimport \"@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css\";\r\n\r\n\r\n\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columnDefs: [\r\n        {\r\n          headerName: \"Make\",\r\n          field: \"make\",\r\n        },\r\n        {\r\n          headerName: \"Model\",\r\n          field: \"model\",\r\n        },\r\n        {\r\n          headerName: \"Price\",\r\n          field: \"price\",\r\n        },\r\n      ],\r\n      rowData: [\r\n        {\r\n          make: \"Toyota\",\r\n          model: \"Celica\",\r\n          price: 35000,\r\n        },\r\n        {\r\n          make: \"Ford\",\r\n          model: \"Mondeo\",\r\n          price: 32000,\r\n        },\r\n        {\r\n          make: \"Porsche\",\r\n          model: \"Boxter\",\r\n          price: 72000,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Box\r\n        direction=\"row\"\r\n        border={{ color: \"brand\", size: \"large\" }}\r\n        pad=\"medium\"\r\n      >\r\n       <Text>{\"Login Page\"}</Text>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Col, Row } from \"antd\";\r\nimport { Box, Text } from \"grommet\";\r\nimport { AgGridReact } from \"@ag-grid-community/react\";\r\nimport { AllCommunityModules } from \"@ag-grid-community/all-modules\";\r\n\r\nimport \"@ag-grid-community/all-modules/dist/styles/ag-grid.css\";\r\nimport \"@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columnDefs: [\r\n        {\r\n          headerName: \"Make\",\r\n          field: \"make\",\r\n        },\r\n        {\r\n          headerName: \"Model\",\r\n          field: \"model\",\r\n        },\r\n        {\r\n          headerName: \"Price\",\r\n          field: \"price\",\r\n        },\r\n      ],\r\n      rowData: [\r\n        {\r\n          make: \"Toyota\",\r\n          model: \"Celica\",\r\n          price: 35000,\r\n        },\r\n        {\r\n          make: \"Ford\",\r\n          model: \"Mondeo\",\r\n          price: 32000,\r\n        },\r\n        {\r\n          make: \"Porsche\",\r\n          model: \"Boxter\",\r\n          price: 72000,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Box\r\n        direction=\"row\"\r\n        border={{ color: \"brand\", size: \"large\" }}\r\n        pad=\"medium\"\r\n      >\r\n        <Text>{\"Home Page\"}</Text>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { Box, Text, Image  } from \"grommet\";\r\n\r\n\r\n\r\nclass Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n \r\n\r\n  render() {\r\n    console.log(\"Coming props are\", this.props);\r\n    return (\r\n      <Box\r\n        background=\"white\"\r\n        pad=\"medium\"\r\n        width=\"100%\"\r\n        border={{ color: \"black\", size: \"xsmall\" }}\r\n        flex=\"grow\"\r\n        alignSelf=\"center\"\r\n        gap=\"medium\"\r\n      >\r\n        <Box>\r\n          <Box background=\"#6a6e69\" >\r\n            <Text size = \"medium\" color = \"white\"> {this.props.title}</Text>\r\n          </Box>\r\n          <Box >\r\n            <Text> {\"Sample Image\"}</Text>\r\n          </Box>\r\n          <Box background=\"#9be892\" >\r\n            <Text size = \"small\"> {this.props.description}</Text>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Box, Text } from \"grommet\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useHistory,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\n\r\nimport { AgGridReact } from \"@ag-grid-community/react\";\r\nimport { AllCommunityModules } from \"@ag-grid-community/all-modules\";\r\n\r\nimport \"@ag-grid-community/all-modules/dist/styles/ag-grid.css\";\r\nimport \"@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css\";\r\nimport Card from \"././Card\";\r\n\r\nclass Start extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  hamdleResumeonClick = () => {\r\n    // const history = useHistory();\r\n    console.log(\"I am clicked for navigate to resume link\");\r\n  };\r\n\r\n  render() {\r\n      console.log(\"Comping props\", this.props)\r\n    return (\r\n      <Box\r\n        background=\"white\"\r\n        pad=\"medium\"\r\n        width=\"100%\"\r\n        // border={{ color: \"red\", size: \"small\" }}\r\n        flex=\"grow\"\r\n        alignSelf=\"center\"\r\n        gap=\"medium\"\r\n      >\r\n        <Box>\r\n          <Text size=\"medium\" color=\"green\">\r\n            {\"Welcome to the project it just a begning...\"}\r\n          </Text>\r\n\r\n          <Text size=\"medium\" color=\"green\">\r\n            {\"Please Select the module you want to the access.\"}\r\n          </Text>\r\n        </Box>\r\n        <Box direction=\"row\" gap=\"small\">\r\n          <Box\r\n            width=\"25%\"\r\n            elevation=\"medium\"\r\n            onClick={() => {\r\n              this.hamdleResumeonClick();\r\n            }}\r\n          >\r\n            <Card title=\"Resume\" description=\"My Resume\" />\r\n          </Box>\r\n\r\n          <Box width=\"25%\" elevation=\"medium\">\r\n            <Card\r\n              title=\"Food Ordering\"\r\n              description=\"A sample web app to order food ordering and vie food items\"\r\n            ></Card>\r\n          </Box>\r\n          <Box width=\"25%\" elevation=\"medium\">\r\n            <Card\r\n              title=\"E-commerce\"\r\n              description=\"A web app is a sample copy of amamzon.com\"\r\n            ></Card>\r\n          </Box>\r\n          <Box width=\"25%\" elevation=\"medium\">\r\n            <Card\r\n              title=\"Fashion\"\r\n              description=\"A gallery where ypu find all your required designs\"\r\n            ></Card>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Start;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Box, Text, Image, Carousel, Heading } from \"grommet\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useHistory,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\n\r\nimport { AgGridReact } from \"@ag-grid-community/react\";\r\nimport { AllCommunityModules } from \"@ag-grid-community/all-modules\";\r\n\r\nimport \"@ag-grid-community/all-modules/dist/styles/ag-grid.css\";\r\nimport \"@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css\";\r\nimport { LinkedinOption } from \"grommet-icons\";\r\nimport { StackOverflow } from \"grommet-icons\";\r\nimport { Twitter } from \"grommet-icons\";\r\nimport { Github } from \"grommet-icons\";\r\nimport { Medium } from \"grommet-icons\";\r\n\r\n\r\nclass AboutMe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n    };\r\n  }\r\n\r\n  hamdleResumeonClick = () => {\r\n    // const history = useHistory();\r\n    console.log(\"I am clicked for navigate to resume link\");\r\n  };\r\n\r\n  handledrop = () => {\r\n    this.state.visible\r\n      ? this.setState({ visible: false })\r\n      : this.setState({ visible: true });\r\n  };\r\n\r\n  handleLinkedInClick = () => {\r\n    window.open(\"https://www.linkedin.com/in/garvitanand2/\", \"_self\");\r\n  };\r\n\r\n  handleStackClick = () => {\r\n    window.open(\r\n      \"https://stackoverflow.com/users/7703785/garvit-anand\",\r\n      \"_self\"\r\n    );\r\n  };\r\n\r\n  handleGitClick = () => {\r\n    window.open(\"https://github.com/garvitanand2\", \"_self\");\r\n  };\r\n\r\n  handleTwitterClick = () => {\r\n    window.open(\" https://twitter.com/AnandGarvit\", \"_self\");\r\n  };\r\n\r\n  handleMediumClick = () =>{\r\n       window.open(\"https://medium.com/@garvitanand11\", \"_self\");\r\n  }\r\n  render() {\r\n    return (\r\n      <Box\r\n        background=\"white\"\r\n        // pad=\"medium\"\r\n        width=\"100%\"\r\n        // border={{ color: \"black\", size: \"medium\" }}\r\n        flex=\"grow\"\r\n        alignSelf=\"center\"\r\n        // gap=\"medium\"\r\n        elevation=\"medium\"\r\n      >\r\n        <Box background=\"yellow\" direction=\"row\">\r\n          <Box width=\"90%\" align=\"start\" pad={{ left: \"small\" }}>\r\n            <Text color=\"black\" size=\"medium\">\r\n              {\"About Me\"}\r\n            </Text>\r\n          </Box>\r\n          <Box\r\n            width=\"10%\"\r\n            align=\"end\"\r\n            onClick={() => {\r\n              this.handledrop();\r\n            }}\r\n          >\r\n            <Image\r\n              //   fit=\"cover\"\r\n              src={process.env.PUBLIC_URL + \"/Images/new_down.png\"}\r\n              fit=\"contain\"\r\n              height=\"12px\"\r\n              style={{ cursor: \"pointer\" }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        {true && (\r\n          <Box background=\"black\">\r\n            <Box\r\n              width=\"100%\"\r\n              direction=\"row\"\r\n              gap=\"medium\"\r\n              pad=\"medium\"\r\n              justify=\"end\"\r\n            >\r\n              <LinkedinOption\r\n                color=\"white\"\r\n                onClick={() => {\r\n                  this.handleLinkedInClick();\r\n                }}\r\n              ></LinkedinOption>\r\n              <StackOverflow\r\n                onClick={() => {\r\n                  this.handleStackClick();\r\n                }}\r\n              ></StackOverflow>\r\n              <Twitter\r\n                onClick={() => {\r\n                  this.handleTwitterClick();\r\n                }}\r\n              ></Twitter>\r\n              <Github\r\n                onClick={() => {\r\n                  this.handleGitClick();\r\n                }}\r\n              ></Github>\r\n              <Medium\r\n                onClick={() => {\r\n                  this.handleMediumClick();\r\n                }}\r\n              ></Medium>\r\n            </Box>\r\n            <Heading>{\"About Me\"}</Heading>\r\n            <Box pad={{ left: \"medium\" }}>\r\n              <Heading textAlign=\"start\" level={3}>\r\n                {\"Objective\"}\r\n              </Heading>\r\n            </Box>\r\n            <Box\r\n              width=\"100%\"\r\n              alignSelf=\"start\"\r\n              //   border={{ color: \"red\", size: \"small\" }}\r\n            >\r\n              <Text size=\"medium\">\r\n                {\r\n                  \"To obtain an opportunity to work in competitive environment, that will enable me to contribute my academic skills and experience towards the growth of the organization and also leverages the scope of learning from the peer members\"\r\n                }\r\n              </Text>\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutMe;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Box, Text, Image } from \"grommet\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useHistory,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\n\r\nimport { AgGridReact } from \"@ag-grid-community/react\";\r\nimport { AllCommunityModules } from \"@ag-grid-community/all-modules\";\r\n\r\nimport \"@ag-grid-community/all-modules/dist/styles/ag-grid.css\";\r\nimport \"@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css\";\r\n\r\nclass Education extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n    };\r\n  }\r\n\r\n  hamdleResumeonClick = () => {\r\n    // const history = useHistory();\r\n    console.log(\"I am clicked for navigate to resume link\");\r\n  };\r\n\r\n  handledrop = () => {\r\n    this.state.visible\r\n      ? this.setState({ visible: false })\r\n      : this.setState({ visible: true });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"Comping props\", this.props);\r\n    return (\r\n      <Box\r\n        background=\"white\"\r\n        // pad=\"medium\"\r\n        width=\"100%\"\r\n        // border={{ color: \"black\", size: \"medium\" }}\r\n        flex=\"grow\"\r\n        alignSelf=\"center\"\r\n        // gap=\"medium\"\r\n        elevation=\"medium\"\r\n      >\r\n        <Box background=\"yellow\" direction=\"row\">\r\n          <Box width=\"90%\" align=\"start\" pad={{ left: \"small\" }}>\r\n            <Text color=\"black\" size=\"medium\">\r\n              {\"Education\"}\r\n            </Text>\r\n          </Box>\r\n          <Box\r\n            width=\"10%\"\r\n            align=\"end\"\r\n            onClick={() => {\r\n              this.handledrop();\r\n            }}\r\n          >\r\n            <Image\r\n              //   fit=\"cover\"\r\n              src={process.env.PUBLIC_URL + \"/Images/new_down.png\"}\r\n              fit=\"contain\"\r\n              height=\"12px\"\r\n              style={{ cursor: \"pointer\" }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        {this.state.visible && (\r\n          <Box>\r\n            <Text>{\"Some Discription\"}</Text>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Education;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Box, Text, Image } from \"grommet\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useHistory,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\n\r\nimport { AgGridReact } from \"@ag-grid-community/react\";\r\nimport { AllCommunityModules } from \"@ag-grid-community/all-modules\";\r\n\r\nimport \"@ag-grid-community/all-modules/dist/styles/ag-grid.css\";\r\nimport \"@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css\";\r\n\r\nclass Employment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n    };\r\n  }\r\n\r\n  hamdleResumeonClick = () => {\r\n    // const history = useHistory();\r\n    console.log(\"I am clicked for navigate to resume link\");\r\n  };\r\n\r\n  handledrop = () => {\r\n    this.state.visible\r\n      ? this.setState({ visible: false })\r\n      : this.setState({ visible: true });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"Comping props\", this.props);\r\n    return (\r\n      <Box\r\n        background=\"white\"\r\n        // pad=\"medium\"\r\n        width=\"100%\"\r\n        // border={{ color: \"black\", size: \"medium\" }}\r\n        flex=\"grow\"\r\n        alignSelf=\"center\"\r\n        // gap=\"medium\"\r\n        elevation=\"medium\"\r\n      >\r\n        <Box background=\"yellow\" direction=\"row\">\r\n          <Box width=\"90%\" align=\"start\" pad={{ left: \"small\" }}>\r\n            <Text color=\"black\" size=\"medium\">\r\n              {\"Employment\"}\r\n            </Text>\r\n          </Box>\r\n          <Box\r\n            width=\"10%\"\r\n            align=\"end\"\r\n            onClick={() => {\r\n              this.handledrop();\r\n            }}\r\n          >\r\n            <Image\r\n              //   fit=\"cover\"\r\n              src={process.env.PUBLIC_URL + \"/Images/new_down.png\"}\r\n              fit=\"contain\"\r\n              height=\"12px\"\r\n              style={{ cursor: \"pointer\" }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        {this.state.visible && (\r\n          <Box>\r\n            <Text>{\"Some Discription\"}</Text>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Employment;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Box, Text, Image } from \"grommet\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useHistory,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\n\r\nimport { AgGridReact } from \"@ag-grid-community/react\";\r\nimport { AllCommunityModules } from \"@ag-grid-community/all-modules\";\r\n\r\nimport \"@ag-grid-community/all-modules/dist/styles/ag-grid.css\";\r\nimport \"@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css\";\r\n\r\nclass Experience extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n    };\r\n  }\r\n\r\n  hamdleResumeonClick = () => {\r\n    // const history = useHistory();\r\n    console.log(\"I am clicked for navigate to resume link\");\r\n  };\r\n\r\n  handledrop = () => {\r\n    this.state.visible\r\n      ? this.setState({ visible: false })\r\n      : this.setState({ visible: true });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"Comping props\", this.props);\r\n    return (\r\n      <Box\r\n        background=\"white\"\r\n        // pad=\"medium\"\r\n        width=\"100%\"\r\n        // border={{ color: \"black\", size: \"medium\" }}\r\n        flex=\"grow\"\r\n        alignSelf=\"center\"\r\n        // gap=\"medium\"\r\n        elevation=\"medium\"\r\n      >\r\n        <Box background=\"yellow\" direction=\"row\">\r\n          <Box width=\"90%\" align=\"start\" pad={{ left: \"small\" }}>\r\n            <Text color=\"black\" size=\"medium\">\r\n              {\"Experience\"}\r\n            </Text>\r\n          </Box>\r\n          <Box\r\n            width=\"10%\"\r\n            align=\"end\"\r\n            onClick={() => {\r\n              this.handledrop();\r\n            }}\r\n          >\r\n            <Image\r\n              //   fit=\"cover\"\r\n              src={process.env.PUBLIC_URL + \"/Images/new_down.png\"}\r\n              fit=\"contain\"\r\n              height=\"12px\"\r\n              style={{ cursor: \"pointer\" }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        {this.state.visible && (\r\n          <Box>\r\n            <Text>{\"Some Discription\"}</Text>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Experience;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Box, Text, Image } from \"grommet\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useHistory,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\n\r\nimport { AgGridReact } from \"@ag-grid-community/react\";\r\nimport { AllCommunityModules } from \"@ag-grid-community/all-modules\";\r\n\r\nimport \"@ag-grid-community/all-modules/dist/styles/ag-grid.css\";\r\nimport \"@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css\";\r\n\r\nclass Project extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n    };\r\n  }\r\n\r\n  hamdleResumeonClick = () => {\r\n    // const history = useHistory();\r\n    console.log(\"I am clicked for navigate to resume link\");\r\n  };\r\n\r\n  handledrop = () => {\r\n    this.state.visible\r\n      ? this.setState({ visible: false })\r\n      : this.setState({ visible: true });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"Comping props\", this.props);\r\n    return (\r\n      <Box\r\n        background=\"white\"\r\n        // pad=\"medium\"\r\n        width=\"100%\"\r\n        // border={{ color: \"black\", size: \"medium\" }}\r\n        flex=\"grow\"\r\n        alignSelf=\"center\"\r\n        // gap=\"medium\"\r\n        elevation=\"medium\"\r\n      >\r\n        <Box background=\"yellow\" direction=\"row\">\r\n          <Box width=\"90%\" align=\"start\" pad={{ left: \"small\" }}>\r\n            <Text color=\"black\" size=\"medium\">\r\n              {\"Projects\"}\r\n            </Text>\r\n          </Box>\r\n          <Box\r\n            width=\"10%\"\r\n            align=\"end\"\r\n            onClick={() => {\r\n              this.handledrop();\r\n            }}\r\n          >\r\n            <Image\r\n              //   fit=\"cover\"\r\n              src={process.env.PUBLIC_URL + \"/Images/new_down.png\"}\r\n              fit=\"contain\"\r\n              height=\"12px\"\r\n              style={{ cursor: \"pointer\" }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        {this.state.visible && (\r\n          <Box>\r\n            <Text>{\"Some Discription\"}</Text>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Project;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Box, Text, Image } from \"grommet\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useHistory,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\n\r\nimport { AgGridReact } from \"@ag-grid-community/react\";\r\nimport { AllCommunityModules } from \"@ag-grid-community/all-modules\";\r\n\r\nimport \"@ag-grid-community/all-modules/dist/styles/ag-grid.css\";\r\nimport \"@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n    };\r\n  }\r\n\r\n  hamdleResumeonClick = () => {\r\n    // const history = useHistory();\r\n    console.log(\"I am clicked for navigate to resume link\");\r\n  };\r\n\r\n  handledrop = () => {\r\n    this.state.visible\r\n      ? this.setState({ visible: false })\r\n      : this.setState({ visible: true });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"Comping props\", this.props);\r\n    return (\r\n      <Box\r\n        background=\"white\"\r\n        // pad=\"medium\"\r\n        width=\"100%\"\r\n        border={{ color: \"black\", size: \"medium\" }}\r\n        flex=\"grow\"\r\n        alignSelf=\"center\"\r\n        // gap=\"medium\"\r\n        elevation=\"medium\"\r\n      >\r\n        <Box background=\"yellow\" direction=\"row\">\r\n          <Box width=\"90%\" align=\"start\" pad={{ left: \"small\" }}>\r\n            <Text color=\"black\" size=\"medium\">\r\n              {\"Home\"}\r\n            </Text>\r\n          </Box>\r\n          <Box\r\n            width=\"10%\"\r\n            align=\"end\"\r\n            onClick={() => {\r\n              this.handledrop();\r\n            }}\r\n          >\r\n            <Image\r\n              //   fit=\"cover\"\r\n              src={process.env.PUBLIC_URL + \"/Images/new_down.png\"}\r\n              fit=\"contain\"\r\n              height=\"12px\"\r\n              style={{ cursor: \"pointer\" }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        {this.state.visible && (\r\n          <Box>\r\n            <Text>{\"Some Discription\"}</Text>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { CircularProgressbar } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport { Box, Text, Image } from \"grommet\";\r\n\r\nclass TechSkills extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n    };\r\n  }\r\n\r\n  handledrop = () => {\r\n    this.state.visible\r\n      ? this.setState({ visible: false })\r\n      : this.setState({ visible: true });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Box\r\n        background=\"white\"\r\n        width=\"100%\"\r\n        flex=\"grow\"\r\n        alignSelf=\"center\"\r\n        elevation=\"medium\"\r\n      >\r\n        <Box background=\"yellow\" direction=\"row\">\r\n          <Box width=\"90%\" align=\"start\" pad=\"small\">\r\n            <Text color=\"black\" size=\"large\">\r\n              {\"Technical Skills\"}\r\n            </Text>\r\n          </Box>\r\n          <Box\r\n            width=\"10%\"\r\n            align=\"end\"\r\n            pad=\"small\"\r\n            onClick={() => {\r\n              this.handledrop();\r\n            }}\r\n          >\r\n            <Image\r\n              src={process.env.PUBLIC_URL + \"/Images/new_down.png\"}\r\n              fit=\"contain\"\r\n              height=\"12px\"\r\n              style={{ cursor: \"pointer\" }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        {this.state.visible && (\r\n          <Box\r\n            pad={{\r\n              left: \"medium\",\r\n              top: \"medium\",\r\n              bottom: \"medium\",\r\n              right: \"medium\",\r\n            }}\r\n            gap=\"medium\"\r\n            margin={\r\n              {\r\n                //   left: \"medium\",\r\n                //   top: \"medium\",\r\n                //   bottom: \"medium\",\r\n                //   right: \"medium\",\r\n              }\r\n            }\r\n            align=\"center\"\r\n            background=\"black\"\r\n          >\r\n            <Box width=\"100%\" direction=\"row\" gap=\"xlarge\">\r\n              <Box width=\"10%\" margin={{ left: \"medium\", right: \"medium\" }}>\r\n                <CircularProgressbar value={50} text={`${50}%`} />\r\n                <Text color=\"white\">{\"C\"}</Text>\r\n              </Box>\r\n              <Box width=\"10%\" margin={{ left: \"medium\", right: \"medium\" }}>\r\n                <CircularProgressbar value={50} text={`${50}%`} />\r\n                <Text color=\"white\">{\"Java\"}</Text>\r\n              </Box>\r\n              <Box width=\"10%\" margin={{ left: \"medium\", right: \"medium\" }}>\r\n                <CircularProgressbar value={50} text={`${50}%`} />\r\n                <Text color=\"white\">{\"HTML\"}</Text>\r\n              </Box>\r\n              <Box width=\"10%\" margin={{ left: \"medium\", right: \"medium\" }}>\r\n                <CircularProgressbar value={50} text={`${50}%`} />\r\n                <Text color=\"white\">{\"CSS\"}</Text>\r\n              </Box>\r\n              <Box width=\"10%\" margin={{ left: \"medium\", right: \"medium\" }}>\r\n                <CircularProgressbar value={50} text={`${50}%`} />\r\n                <Text color=\"white\">{\"Java Script\"}</Text>\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box width=\"100%\" direction=\"row\" gap=\"xlarge\">\r\n              <Box width=\"10%\" margin={{ left: \"medium\", right: \"medium\" }}>\r\n                <CircularProgressbar value={50} text={`${50}%`} />\r\n                <Text color=\"white\">{\"React Js\"}</Text>\r\n              </Box>\r\n              <Box width=\"10%\" margin={{ left: \"medium\", right: \"medium\" }}>\r\n                <CircularProgressbar value={50} text={`${50}%`} />\r\n                <Text color=\"white\">{\"Node Js\"}</Text>\r\n              </Box>\r\n              <Box width=\"10%\" margin={{ left: \"medium\", right: \"medium\" }}>\r\n                <CircularProgressbar value={50} text={`${50}%`} />\r\n                <Text color=\"white\">{\"SQL\"}</Text>\r\n              </Box>\r\n              <Box width=\"10%\" margin={{ left: \"medium\", right: \"medium\" }}>\r\n                <CircularProgressbar value={50} text={`${50}%`} />\r\n                <Text color=\"white\">{\"Python\"}</Text>\r\n              </Box>\r\n              <Box width=\"10%\" margin={{ left: \"medium\", right: \"medium\" }}>\r\n                <CircularProgressbar value={50} text={`${50}%`} />\r\n                <Text color=\"white\">{\"Data Science\"}</Text>\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box width=\"100%\" direction=\"row\" gap=\"xlarge\">\r\n              <Box width=\"10%\" margin={{ left: \"medium\", right: \"medium\" }}>\r\n                <CircularProgressbar value={50} text={`${50}%`} />\r\n                <Text color=\"white\">{\"Machine Learning\"}</Text>\r\n              </Box>\r\n              <Box width=\"10%\" margin={{ left: \"medium\", right: \"medium\" }}>\r\n                <CircularProgressbar value={50} text={`${50}%`} />\r\n                <Text color=\"white\">{\"Postgres\"}</Text>\r\n              </Box>\r\n              <Box width=\"10%\" margin={{ left: \"medium\", right: \"medium\" }}>\r\n                <CircularProgressbar value={50} text={`${50}%`} />\r\n                <Text color=\"white\">{\"CSS\"}</Text>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TechSkills;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Box, Text } from \"grommet\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useHistory,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\n\r\nimport { AgGridReact } from \"@ag-grid-community/react\";\r\nimport { AllCommunityModules } from \"@ag-grid-community/all-modules\";\r\n\r\nimport \"@ag-grid-community/all-modules/dist/styles/ag-grid.css\";\r\nimport \"@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css\";\r\nimport Card from \"../../component/Card\";\r\nimport AboutMe from \"./Components/Aboutme\";\r\nimport Education from \"./Components/Education\";\r\nimport Employment from \"./Components/Employment\";\r\nimport Experience from \"./Components/Experience\";\r\nimport Home from \"./Components/Home\";\r\nimport Project from \"./Components/Projects\";\r\nimport TeckSkills from \"./Components/TechSkills\";\r\n\r\nclass Resume extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  hamdleResumeonClick = () => {\r\n    // const history = useHistory();\r\n    console.log(\"I am clicked for navigate to resume link\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Box width=\"100%\" flex=\"grow\">\r\n        <Box width=\"100%\">\r\n          <AboutMe></AboutMe>\r\n          <Education></Education>\r\n          <Employment></Employment>\r\n          <Experience></Experience>\r\n          {false && <Home></Home>}\r\n          <Project></Project>\r\n          <TeckSkills></TeckSkills>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Resume;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport MyComponent from './component/home.js';\nimport MainPage from './component/Main'\nimport Home from './component/Page2'\nimport StartPage from './component/Start'\nimport Resume from './Pages/Resume'\nimport { Box,Text, Clock, Heading } from \"grommet\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useHistory,\n  useLocation,\n} from \"react-router-dom\";\n\nfunction App() {\n  const history = useHistory();\n  return (\n    <Router>\n      <div className=\"App\" width=\"100%\" flex=\"grow\">\n        <Switch>\n          <Route path=\"/login\">\n            <MainPage />\n          </Route>\n          <Route path=\"/resume\">\n            <Resume />\n          </Route>\n          <Route path=\"/home\">\n            <Home />\n          </Route>\n          <Route path=\"/\">\n            <StartPage />\n          </Route>\n        </Switch>\n\n        <Box direction=\"row\">\n          <Box width=\"90%\" align=\"end\">\n            <Text size=\"small\">\n              {\"Created By: Garvit Anand | For Sampe Use Only\"}\n            </Text>\n          </Box>\n          <Box width=\"10%\" align=\"end\">\n            <Clock type=\"digital\" />\n          </Box>\n        </Box>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}